script:
  start_ou_pause_aspirateur:
    alias: vacuum - start/pause
    sequence:
    - choose:
      - conditions:
        - condition: state
          entity_id: input_select.roborock_state_input_select
          state: docked
        sequence:
        - service: script.clean_rooms
        - service: input_select.select_option
          target:
            entity_id: input_select.roborock_state_input_select
          data:
            option: cleaning
      - conditions:
        - condition: state
          entity_id: input_select.roborock_state_input_select
          state: charging
        sequence:
        - service: script.clean_rooms
        - service: input_select.select_option
          target:
            entity_id: input_select.roborock_state_input_select
          data:
            option: cleaning
      - conditions:
        - condition: state
          entity_id: input_select.roborock_state_input_select
          state: paused
        sequence:
        - service: script.clean_rooms
        - service: input_select.select_option
          target:
            entity_id: input_select.roborock_state_input_select
          data:
            option: cleaning
      default:
      - service: vacuum.pause
        target:
          entity_id: vacuum.mi_robot_vacuum
      - service: input_select.select_option
        target:
          entity_id: input_select.roborock_state_input_select
        data:
          option: paused
    mode: single
    icon: mdi:robot-vacuum


  clean_rooms:
    alias: Vacuum cleaner - clean pieces
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: |-
                  {{ states("input_boolean.vacuum_living_room_selected") == "on" or
                    states("input_boolean.vacuum_kitchen_selected") == "on" or 
                    states("input_boolean.vacuum_bedroom_selected") == "on" or
                    states("input_boolean.vacuum_hall_selected") == "on"}}
            sequence:
              - service: vacuum.send_command
                target:
                  entity_id: vacuum.mi_robot_vacuum
                data:
                  command: app_segment_clean
                  params: >-
                    {% set rooms = namespace(numbers=[]) %}

                    {% if states("input_boolean.vacuum_living_room_selected") ==
                    "on" %}
                      {% set rooms.numbers = rooms.numbers + [18] %}
                    {% endif %}

                    {% if states("input_boolean.vacuum_kitchen_selected") == "on" %}
                      {% set rooms.numbers = rooms.numbers + [17] %}
                    {% endif %}

                    {% if states("input_boolean.vacuum_bedroom_selected") == "on" %}
                      {% set rooms.numbers = rooms.numbers + [16] %}
                    {% endif %}

                    {% if states("input_boolean.vacuum_hall_selected") == "on" %}
                      {% set rooms.numbers = rooms.numbers + [19] %}
                    {% endif %}

                    {{ rooms.numbers}}
        default:
          - service: vacuum.start
            target:
              entity_id: vacuum.mi_robot_vacuum
            data: {}
    mode: single
    icon: mdi:robot-vacuum

  aspirateur_retour_a_la_base:
    alias: Vacuum - returning  home
    sequence:
    - condition: template
      value_template: '{{ states("input_select.roborock_state_input_select") != "docked"
        }}'  
    - service: input_select.select_option
      target:
        entity_id: input_select.roborock_state_input_select
      data:
        option: returning home
    - service: vacuum.return_to_base
      target:
        entity_id: vacuum.mi_robot_vacuum
    mode: single
    icon: mdi:robot-vacuum